name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly security audit

permissions:
  contents: read
  checks: write

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04]
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check code formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy linter
        run: cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test --all-features --verbose

      - name: Build release
        run: cargo build --release

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: '--ignore-tests --avoid-cfg-tarpaulin'

      - name: Generate coverage report
        run: |
          cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml
          retention-days: 7
          overwrite: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run cargo-audit
        uses: actions-rs/audit-check@v1
        continue-on-error: true
